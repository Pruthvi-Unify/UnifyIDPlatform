{
  "version": 3,
  "sources": ["../../../app/routes/login.tsx"],
  "sourcesContent": ["import { useToggle, upperFirst } from '@mantine/hooks';\nimport { useForm } from '@mantine/form';\nimport { useLoaderData } from \"@remix-run/react\";\nimport { LoaderFunction, json, ActionFunction, useActionData, redirect } from '@remix-run/node';\nimport {\n  TextInput,\n  PasswordInput,\n  Text,\n  Paper,\n  Group,\n  PaperProps,\n  Button,\n  Divider,\n  Container,\n  Checkbox,\n  Anchor,\n  Stack,\n} from '@mantine/core';\nimport { GoogleButton, FacebookButton } from 'app/SocialButtons/SocialButtons';\nimport { Form } from '@remix-run/react';\n\nexport async function loader(params:type) {\n  const res = await fetch(\"https://recursing-bell-xtl2ro51rb.projects.oryapis.com/self-service/login/api\");\n  //console.log(res)\n  return json(await res.json())\n} \n\n\nexport const action: ActionFunction = async ({request}) => {\n  const formData = await request.formData();\n  const flow = String(formData.get(\"id\"))\n  var url = \"https://recursing-bell-xtl2ro51rb.projects.oryapis.com/self-service/login\";\n  var posturl = url.concat(flow)\n  console.log(posturl);\n  const res1 = await fetch(posturl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      values\n    })\n  });  \n  console.log(res1)\n  return json(res1.json)\n}     \n      \n      \n      //console.log(res);\n    \n\nexport default function login(props: PaperProps) {\n  const flow = useLoaderData();\n  //const res1 = useActionData();\n  const [type, toggle] = useToggle(['login', 'register']);\n  const form = useForm({\n    initialValues: {\n      identifier: '',\n      password: '',\n      method: 'password',\n      terms: true,\n    },\n\n    validate: {\n      password: (val) => (val.length <= 6 ? 'Password should include at least 6 characters' : null),\n    },\n  });\n\n\n  return (\n    <Container size={720} my={40}>  \n        <Paper radius=\"md\" p=\"xl\" withBorder {...props} >\n        <Text size=\"lg\"  sx={(theme) => ({ fontFamily: `Greycliff CF, ${theme.fontFamily}`, fontWeight: 900 })} align=\"center\">\n            Welcome to Mantine, {type} with\n        </Text>\n        \n        <Paper withBorder shadow=\"md\" p={30} mt={30} radius=\"md\">\n          <Form id='credentials' method='post'>\n            <input type=\"hidden\" id=\"flow\" value={flow.id} />\n            <TextInput label=\"identifier\" placeholder=\"UserID\" required/>\n            <PasswordInput label=\"password\" placeholder=\"Your password\" required mt=\"md\"/>\n\n            <Group position=\"apart\" mt=\"md\">\n            <Checkbox label=\"Remember me\" />\n            <Anchor<'a'> onClick={(event) => event.preventDefault()} href=\"#\" size=\"sm\">\n                Forgot password?\n            </Anchor>\n            </Group>\n            <Group>\n            <Button fullWidth mt=\"xl\"  id=\"btnSubmit\">\n            Sign in\n            </Button>\n            </Group>\n          </Form>\n        </Paper>\n        \n          <Text>{flow.id}</Text>\n        \n\n        <Group grow mb=\"mb\" mt=\"md\">\n            <GoogleButton radius=\"xl\">Google</GoogleButton>\n            <FacebookButton radius=\"xl\">Twitter</FacebookButton>\n        </Group>\n\n        <Text color=\"dimmed\" size=\"sm\" align=\"center\" mt={5}>\n            Do not have an account yet?{' '}\n            <Anchor<'a'> href=\"#\" size=\"sm\" onClick={(event) => event.preventDefault()}>\n            Create account\n            </Anchor>\n        </Text>\n      </Paper>\n    </Container>\n  );\n}"],
  "mappings": "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",
  "names": []
}
